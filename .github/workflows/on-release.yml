name: Release
on:
  release:
    types: [published]

permissions:
  contents: write # Required for GitHub publisher to upload release assets

jobs:
  security:
    name: Security Checks
    uses: ./.github/workflows/_security-checks.yml

  static-checks:
    name: Static Checks
    uses: ./.github/workflows/_static-checks.yml
    secrets: inherit

  unit-tests:
    name: Unit Tests
    uses: ./.github/workflows/_unit-tests.yml
    secrets: inherit

  extract-version:
    name: Extract Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Extract version from tag
        id: version
        shell: bash
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/v}
          VERSION=${VERSION#v}
          echo "Setting version to: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build:
    name: Build Matrix
    uses: ./.github/workflows/_build-matrix.yml
    needs: [security, static-checks, unit-tests, extract-version]
    with:
      version: ${{ needs.extract-version.outputs.version }}
    secrets: inherit

  publish:
    name: Publish to GitHub Release
    runs-on: ubuntu-latest
    needs: [build, extract-version]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Update version
        shell: bash
        run: |
          echo "Setting version to: ${{ needs.extract-version.outputs.version }}"
          npm version ${{ needs.extract-version.outputs.version }} --no-git-tag-version --allow-same-version 
          echo "Updated package.json version to ${{ needs.extract-version.outputs.version }}"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: build-*
          path: out/make/
          merge-multiple: true

      - name: Publish to GitHub Release
        run: pnpm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VITE_SENTRY_DSN: ${{ vars.VITE_SENTRY_DSN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
          SENTRY_RELEASE: ${{ needs.extract-version.outputs.version }}
